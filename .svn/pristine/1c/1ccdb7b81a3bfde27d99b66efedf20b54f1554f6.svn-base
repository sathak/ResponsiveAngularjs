(function () {
    'use strict';

    angular
        .module('app.usermanagement')
        .controller('usermanagement', usermanagement);

    function usermanagement($scope, dataservice, logger, $compile, $timeout, $location, pageConfig, $rootScope, menuSettings) {
        var vm = this;
      //  activate();
        vm.readOnly = false;

        if (pageConfig === undefined || pageConfig.fields === undefined) {
            $location.url('/');
            return false;
        }
        vm.rights = navcon.getUserRights(menuSettings, "padministration", "usermanagement");
        vm.formManage = {};
        //  vm.rights = navcon.getUserRights(menuSettings, "padministration", "kendofields");
        /*Settings*/
        vm.pageConfig = pageConfig;
        vm.kendofieldsFields = angular.copy(vm.pageConfig.fields.kendofieldsFields);
        vm.kendofieldsTable = angular.copy(vm.pageConfig.tables.kendofieldsTable);
        defaultData(vm.pageConfig.data);

        function activate() {
            dataservice.postServerData("", filterFields, false, "", "UserManagement/GetAllUsers").then(function (data) {
                if (data === undefined || data.length === 0) return;
                vm.kendofieldsTable.data = data;
                vm.kendofieldsTableData = data;
            });
        };

        function defaultData(data) {
            navcon.save.loadListDefaultData(data, vm.kendofieldsFields);
            navcon.kendo.loadListDefaultData(data, vm.kendofieldsFields);
        }

        function clearFields() {
            navcon.clearFieldsData(vm.kendofieldsFields);
            vm.kendofieldsFields[userStatusIdIndex].data = true;
           // navcon.clearFieldsData(vm.userManagementHistoryFields);
            //vm.kendofieldsFields[departmentIndex].selectOptions.items = [];
        }

        vm.cancel = function (type) {
            if (type === 'UserDeleteModal') {
                navcon.closeModal(type);
            }
            else {
                clearFields();
               // getUserById(vm.UserId);

                vm.enableFields(false);
                vm.isSave = true;
                vm.isEdit = true;
                vm.isUpdate = true;
                vm.readOnly = true;
                //vm.readOnlyUserName = true;
                vm.showClockNumber = true;

               

                if (vm.UserId === 0)
                    $('#User').removeClass('in');
            }

           // $scope.isHistory = false;
            navcon.closeModal(type);
           // navcon.clearFieldsData(vm.userManagementHistoryFields);
        };

        $scope.cancel = function (type) {
            $scope.isHistory = false;
            navcon.closeModal(type);
           // navcon.clearFieldsData(vm.userManagementHistoryFields);
        }

        /*Edit*/
        vm.edit = function () {
            vm.enableFields(true);
            vm.isSave = true;
            vm.isUpdate = false;
            vm.isCancel = false;
            //vm.isITAR = false;
            //vm.readOnlyUserName = true;
            vm.showClockNumber = true;

            //if (vm.allowEditUserName)
            //    disableUsername(false);
            //else
            //    disableUsername(true);
        };

        vm.save = function (mode, callback) {
            $scope.hideHistory = false;
            vm.isSuperUser = false;

            if (vm.UserId === 0)
                vm.mode = "Save";
            else
                vm.mode = "Update";

            if (authService != undefined && authService.authentication != undefined && authService.authentication.Roles != undefined) {
                if (authService.authentication.Roles.length > 0) {
                    for (var roleIndex = 0; roleIndex < authService.authentication.Roles.length; roleIndex++) {
                        if (authService.authentication.Roles[roleIndex].RoleSystemCode === "SuperUser") {
                            vm.isSuperUser = true;
                            break;
                        }
                    }
                }
            }

            var allowSave = false;
            rolesIndex = navcon.getItemIndexByProperty(vm.kendofieldsFields, "Roles");
            var oldRolesList = vm.kendofieldsFields[rolesIndex].oldData;
            var newRolesList = vm.kendofieldsFields[rolesIndex].data;

            var systemRoleData = $.grep(newRolesList, function (e) {
                return e.IsSystemRole;
            });

            var safetyManagerHODData = $.grep(newRolesList, function (e) {
                if (e.RoleSystemCode === "SafetyManager" || e.RoleSystemCode === "HeadOfDepartment")
                    return true;
            });

            if (systemRoleData.length === 0) {
                logger.warning("Atleast one System Role is required.");
            }
            else if (safetyManagerHODData.length > 1) {
                var sortedSafetyManagerHODData = safetyManagerHODData.slice().sort();

                for (var i = 0; i < safetyManagerHODData.length - 1; i++) {
                    if (sortedSafetyManagerHODData[i + 1].RoleSystemCode !== sortedSafetyManagerHODData[i].RoleSystemCode) {
                        logger.warning("Safety Manager and Head of Department Roles should not be chosen together.");
                        allowSave = false;
                        break;
                    }
                    else allowSave = true;
                }
            }
            else if (!vm.isSuperUser) {
                for (var i = 0; i < newRolesList.length; i++) {
                    if (newRolesList[i].RoleSystemCode === "SuperUser") {
                        logger.warning("Super User Role cannot be assigned.");
                        allowSave = false;
                        break;
                    }
                    else allowSave = true;
                }
            }
            else
                allowSave = true;

            //if (allowSave) {
            //    var idName = "Id";
            //    var idNameIndex = navcon.getItemIndexByProperty(vm.kendofieldsFields, idName);

            //    if (vm.kendofieldsFields[idNameIndex].data != 0) {

            //        //$scope.Historydata = navcon.comparedata(vm.kendofieldsFields, 'Administration User Management', "", "UserId", vm.kendofieldsFields[idNameIndex].data);
            //        //var HistoryIndex = navcon.getItemIndexByProperty(vm.kendofieldsFields, 'History');
            //        //vm.kendofieldsFields[HistoryIndex].data = $scope.Historydata;

            //       // $scope.HistoryTitle = 'Review Changes';

            //        if ($scope.Historydata.length > 0) {
            //            $scope.isHistory = true;
            //            $scope.historyState = "Save";
            //            navcon.openModal('review');
            //        }
            //        else {
            //            $scope.isHistory = false;
            //            navcon.openModal('notFound');
            //        }
            //    } else {
            //        $scope.ProceedToSave();
            //    }
            //}
        };

        $scope.saveChanges = function () {
            //if (vm.formManage.formValid(vm.userManagementHistoryFields)) {
            //    var HistoryRemarksIndex = navcon.getItemIndexByProperty(vm.kendofieldsFields, "HistoryRemarks");
            //    var RemarksIndex = navcon.getItemIndexByProperty(vm.userManagementHistoryFields, "HistoryRemarks");
            //    var objHistory = { Remarks: vm.userManagementHistoryFields[RemarksIndex].data };
            //    console.log(objHistory);
            //    vm.kendofieldsFields[HistoryRemarksIndex].data = objHistory;
            //    $scope.ProceedToSave();
            //}
        };
    }
})();